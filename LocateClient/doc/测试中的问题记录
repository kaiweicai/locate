2014年6月6号压力测试结果
测试用例1:
测试类:ConcurrentRicTest

当一个用户发送1000个同品种RIC时.
服务端的网络被阻塞.服务端的sequence No已经是1万多.
客户端才接收到消息sequence才3000多.
原因分析:
我的网络带宽是4MBits,每秒处理的数据大概是400k,从我的极限下载速度也差不多400K.
一个用户用该网络订阅了1000支RIC.每只股票的信息量大概是1k的样子.
如果一秒内有400只RIC有价格变动,那么网络已经超负荷运行.
由于该值可能还存在一个峰值,也就是说可能在0.1秒内有200个RIC同时有价格变动.
那么网络带宽不够的问题将会更加突出.
解决方法:实时行情一个channel订阅太多不可取.事实该用例在实际情况中较少发现.

反面问题:测试用例2中20个用户也是通过我的网络通道进入我的客户端处理程序.
但是网络通道似乎并没有堵塞.上面的堵塞原因分析是否恰当?

最好还是从价格上限制客户同时订阅的量.
一个客户定10个Ric和定20个RIC价格完全不一样.
20个RIC要贵很多.

最后验证:通过观察360流量检测软件.
发现网络下载量基本都维持在500k以上.峰值1M以上,远远超过我的网络带宽能力.造成网络阻塞.
其中由于使用putty查看linux上面的日志.putty的网络使用量占了200多K.
所以如果不用putty实时查看linux上面的日志信息,该测试可以完全通过..

测试用例2
测试类:ConcurrentRicTest
20个客户端发,每个客户端发送十个不同RIC.
服务器发送的数据客户端全部收到.总数是200.
也测试了极端情况20个用户发送50个请求,总数是1000.
宽带仍然超过负荷.但是基本上能够正常接受消息,有少量延时.

测试用例3
测试类:ConcurrentRicTest
服务器不在使用linux服务器,而是用本地服务器.
意味着数据传输没有通过Internet.
服务器最后写入到网络端口的数据是:19821
客户端最后收到的数据是:19775
网络阻塞的情况有好转.
还是存在问题.

测试中存在的非正常因素:
一次发送多个请求.由于第一次返回的snapshot,也就是一个RIC的全部字段,该信息量比普通的update要大的多.
实际情况中不会同时有这么多客户同时初始化snapshot.所以,该测试也不是特别准确.

待处理问题:
1.测试用例1(此问题可以不用处理.超过网络带宽无法处理.)

2.linux cpu占用率太高,一直是100%,该问题急需解决.

3.在RFAUser.xml文件中有配置如下
				<items>
					<item>ALL</item>
					<limit>4c6d2db7b781a2e0</limit>
				</items>
会限制一个用户收到的报价的个数.这个功能是原来版本中的.是否去掉?
4c6d2db7b781a2e0转化为数字是:3000
是否去掉该功能.

4.服务器端的sequnce No被重置了.原因不明.